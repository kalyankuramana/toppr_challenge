[app:topper_challenge]
use = egg:topper_challenge

# Ramses
ramses.raml_schema = api.raml
database_acls = false

# Nefertari
nefertari.engine = nefertari_mongodb
enable_get_tunneling = true

# SQLA
sqlalchemy.url = postgresql://localhost:5432/topper_challenge

# MongoDB settings
mongodb.host = localhost
mongodb.port = 27017
mongodb.db = topper_challenge

# Elasticsearch
elasticsearch.hosts = localhost:9200
elasticsearch.sniff = false
elasticsearch.index_name = topper_challenge
elasticsearch.index.disable = false
elasticsearch.enable_refresh_query = true
elasticsearch.enable_aggregations = true
elasticsearch.enable_polymorphic_query = true

# topper_challenge
host = localhost
base_url = http://%(host)s:6543

# CORS
cors.enable = true
cors.allow_origins = *
cors.allow_credentials = false

[composite:main]
use = egg:Paste#urlmap
/api/ = topper_challenge

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543
threads = 3

[loggers]
keys = root, topper_challenge, nefertari, ramses

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_topper_challenge]
level = INFO
handlers =
qualname = topper_challenge

[logger_nefertari]
level = INFO
handlers =
qualname = nefertari

[logger_ramses]
level = INFO
handlers =
qualname = ramses

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(module)s.%(funcName)s: %(message)s
